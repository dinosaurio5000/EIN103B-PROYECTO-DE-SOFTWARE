services:
  backend:
    ports:
      - 3001:3001
    build:
      context: ./EIN103B-PROYECTO-DE-SOFTWARE-BACK
      dockerfile: ./backend.Dockerfile
      target: development
    volumes:
      - ./EIN103B-PROYECTO-DE-SOFTWARE-BACK/src/:/usr/src/app
    depends_on:
      - db
    secrets: 
      - db_password
      - jwt_secret
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_USER: backend
      POSTGRES_DB: backend
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      JWT_SECRET_FILE: /run/secrets/jwt_secret
    networks:
      - frontend
      - backend

  db:
    image: postgres:17.6
    restart: always
    shm_size: 128mb
    secrets: 
      - db_password
    volumes:
      - db_data:/var/lib/postgresql
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_USER: backend
      POSTGRES_DB: backend
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    networks:
      - backend
    ports:
      - 5432:5432

  frontend:
    build:
      context: ./EIN103B-PROYECTO-DE-SOFTWARE-FRONT
      dockerfile: ./frontend.Dockerfile
      target: development
    volumes:
      - ./EIN103B-PROYECTO-DE-SOFTWARE-FRONT:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - frontend

networks:
  backend:
    internal: true

  frontend:
    driver: bridge

volumes:
  db_data:

secrets:
  db_password:
    file: ./EIN103B-PROYECTO-DE-SOFTWARE-BACK/secrets/db/db_pass.secret
  jwt_secret:
    file: ./EIN103B-PROYECTO-DE-SOFTWARE-BACK/secrets/jwt/jwt.secret
